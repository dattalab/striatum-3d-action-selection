# note that section headers begin with %, and sections can be:
# 1) COMMON (options applied to all scripts)
# 2) EXTRACT (options applied to kinect_extract)
# 3) TRACK (options applied to kinect_track)
# 4) STATS (options applied to kinect_getstats)
# 5) BOUND (options applied to kinect_bound)

%COMMON
# sub-directory where processing results are stored
proc_dir=proc
analysis_dir=_analysis
# debug level sets whether movies are created after each step
debug_level=1
eta_frequency=1
# frame stride indicates how many frames are loaded into
# memory to process at a time
#movie_lims=[eps 40]
movie_lims=[5 80]
movie_cmap='jet(256)'
auto_per=[5 95]
weighted_centroid=false
box_size=[80 80]
camera_fs=30
height_floor=15
med_filt_size=[3 3]
med_filt_time=[3 5]
hampel_span=[]
hampel_sigma=[]
bookmark=.in_treatment
open_reps=[]
open_size=[]

%EXTRACT
proc_files={'depth.dat','metadata.json'}
bg_frames=3e3
sel_frames=1e3
mem_var='depth_masked'

%ROI
method=auto
depth_range=[600 800]
mouse_range=[10 100]
ransac_iters=2e3
noise_tol=30
dilate_size=20
dilate_strel=disk
open_strel=disk
open_size=3
min_area=100

%TRACK
ord_size_space=[5 5]
ord_num_space=1
med_filt_size=[3 3]
low=20
high=100
theta_thresh=-500
init=manual
diag_covar=true
open_size=[]
open_reps=[]
# threshold on model likelihood before user has to intervene (-inf means never prompt user)
# set to something like 1e-10 if you want to be prompted if the model isn't doing so well
theta_user_bound=-inf
# mean and sigma smoothing (typically not needed)
rho_mu=0
rho_sig=0
deltall_thresh=-.2
lambdas=30
segment=true
movie_lims=[-200 20]
auto_per=[95 99.5]

%STATS
beta=0
low=-30
high=inf
low_raw=10
high_raw=100
save_file=depth_stats.mat
mem_var_stats=depth_masked
mem_var_stats_mask=depth_nocable_em_raw

# rlowess smoothing parameters (span)

angle_smoothing=3
centroid_smoothing=3
ellipse_smoothing=3

# hampel parameters (span and sigma)

angle_hampel_span=5
centroid_hampel_span=5
ellipse_hampel_span=9
angle_hampel_sigma=3
centroid_hampel_sigma=3
ellipse_hampel_sigma=3

mu_var=depth_nocable_mu
sig_var=depth_nocable_sig
vid_file=depth_masked.mat

scale=log
med_filt_size=[]
open_size=5
open_reps=1

use_cc=false
use_model=false
alpha_scale=2e3

%BOUND
save_file=depth_bounded.mat
mem_var=depth_masked

%ORIENT
save_file=
mem_var=depth_bounded

%CABLE_MASK
mem_var=depth_bounded
mu_var=depth_nocable_mu
sig_var=depth_nocable_sig
cable_thresh=-14
open_reps=1
open_size=3
dilate_reps=1
dilate_size=3


%ANALYSIS
missing_data=true
mem_var_features=depth_bounded_rotated
mem_var_mask=depth_bounded_cable_mask_rotated
features_low=15
features_high=100
rps=800

%PCA
# randsvd method, halko for speed, power for accuracy
method=streaming
max_iters=10
#iters_recon=50
randk=500
randq=5
#cut_coeffs=5
cut_recon=10
score_cut=50
# iterate missing data approach until reconstruction error change (percent) goes below epsilon
epsilon=1e-3
hampel_span=5
hampel_sigma=3
stopping='error'
# max frames to use for computing coefficients (uniformly sampled across all data)
# expect to use ~20 GB of RAM per 2e5
max_frames=2e5
max_frames_norm=2e3
chunk_size=1e4
sigma_t=3
sigma_tau=15
sigma_thresh=.1
gauss_rad=1.5
score_smooth=5
score_smooth_method='m'
#med_filt_size=[3 3]
use_memmap=true
jl_eps=.5
bandpass=[]
use_mask=true
use_fft=false
chunk_size=1e4

%MOUSE_MASK
# for chopping tail...
open_reps=1
open_size=5
open_threshold=15
use_cc=true
mem_var=depth_bounded_rotated

%SCALARS
mem_var=recon
save_file=scalars.mat

%BATCH
orchestra_wall_time=48
orchestra_queue='medium'
orchestra_workers=0
orchestra_mem_usage=40000

%STATE_MOVIES
max_examples=30
use_mask=false

%FLIP
model_smoothing=50
method=n
# max frames to use for training flip classifier (uniformly sampled across all data)
# note that 1e5 frames will use ~20 GB of RAM
max_frames=1e5
training_fraction=.75

%CHANGEPOINTS
win=2
smooth_sig=.43
thresh=.15
